<?xml version="1.0" encoding="UTF-8"?>
<edu.isistan.dal.ucs:UCSProject xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:edu.isistan.dal.ucs="http://www.users.exa.unicen.edu.ar/~arago/ucs" ID="_0U_14DhcEeCEUPrX8_ckEg" Name="CRS" Content="The Course Registration System (CRS) is a distributed system to be used within a university intranet. It was developed by IBM to demonstrate their case tools. Some artifacts were available, such as use case specification, some analysis classes and unfinished design documents.&#xD;&#xA;The CRS arises as a replacement of an old educational institution system. There are two main actors. The first are Students, which can apply to courses and obtain their grade reports. And second the Professors, which can register new courses and report student grades." Documents="_0U_14ThcEeCEUPrX8_ckEg _0U_14jhcEeCEUPrX8_ckEg _0U_14zhcEeCEUPrX8_ckEg _BGhcEDhnEeCEUPrX8_ckEg _OaU0cDhnEeCEUPrX8_ckEg _ZgB9kDhnEeCEUPrX8_ckEg _lzAyIDhnEeCEUPrX8_ckEg _txuVIDhnEeCEUPrX8_ckEg _yoFAEDhnEeCEUPrX8_ckEg _ZgQKkDhoEeCEUPrX8_ckEg _-v6pcDkIEeC6voFW1_Te6Q _Sm4FcDkMEeC6voFW1_Te6Q _E8s_ADkNEeC6voFW1_Te6Q _zOHLcDkOEeC6voFW1_Te6Q _OQOt8DkPEeC6voFW1_Te6Q _GQGngL5lEeOeZ6PwCOYBTQ _JXWFQL5lEeOeZ6PwCOYBTQ _Ko8QAL5lEeOeZ6PwCOYBTQ _qmejoL5lEeOeZ6PwCOYBTQ _R_hLQL6BEeOeZ6PwCOYBTQ _Tj02oL6BEeOeZ6PwCOYBTQ _VZMc0L6BEeOeZ6PwCOYBTQ _XFxTYL6BEeOeZ6PwCOYBTQ _Yux4kL6BEeOeZ6PwCOYBTQ _bCj5EL6BEeOeZ6PwCOYBTQ" Stakeholders="_HKFrkDhoEeCEUPrX8_ckEg _IDs0IDhoEeCEUPrX8_ckEg _IuHDEDhoEeCEUPrX8_ckEg _J8T7kDhoEeCEUPrX8_ckEg _K5k1EDhoEeCEUPrX8_ckEg _MxqYEDhoEeCEUPrX8_ckEg">
  <Actors ID="_HKFrkDhoEeCEUPrX8_ckEg" Name="User" Stereotype="Human"/>
  <Actors ID="_IDs0IDhoEeCEUPrX8_ckEg" Name="Student" Stereotype="Human"/>
  <Actors ID="_IuHDEDhoEeCEUPrX8_ckEg" Name="Professor" Stereotype="Human"/>
  <Actors ID="_J8T7kDhoEeCEUPrX8_ckEg" Name="Registrar" Stereotype="Human"/>
  <Actors ID="_K5k1EDhoEeCEUPrX8_ckEg" Name="Course Catalog" Stereotype="Software"/>
  <Actors ID="_MxqYEDhoEeCEUPrX8_ckEg" Name="Billing System" Stereotype="Software"/>
  <UseCaseSpecifications ID="_ZgQKkDhoEeCEUPrX8_ckEg" Name="Close Registration" Content="This use case allows a Registrar to close the registration process. Course offerings that do not have enough students are cancelled. Course offerings must have a minimum of three students in them. The billing system is notified for each student in each course offering that is not cancelled, so the student can be billed for the course offering.&#xD;&#xA;The main actor of this use case is the Registrar. The Billing System is an actor involved within this use case.&#xD;&#xA;The use case begins when the Registrar selects the &quot;close registration&quot; activity from the Main Form." Sections="_ZgQKkThoEeCEUPrX8_ckEg _pVcr8DkIEeC6voFW1_Te6Q _rKVxADkIEeC6voFW1_Te6Q _vvORcDkIEeC6voFW1_Te6Q _yOS78DkIEeC6voFW1_Te6Q _2D-NADkIEeC6voFW1_Te6Q" MainActor="_J8T7kDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_ZgQKkThoEeCEUPrX8_ckEg" Name="Basic Flow - Successful Close Registration" Content="The system checks to see if a Registration is in progress. If it is, then a message is displayed to the Registrar and the use case terminates. The Close Registration processing cannot be performed if registration is in progress.&#xD;&#xA;For each open course offering, the system checks if three students have registered and a professor has signed up to teach the course offering. If so, the system closes the course offering and sends a transaction to the billing system for each student enrolled in the course offering."/>
    <AlternativeFlows ID="_pVcr8DkIEeC6voFW1_Te6Q" Name="Less Than Three Students in the Course Offering" Content="If in the basic flow less than three students signed up for the course offering, the system will cancel the course offering. The Cancel Course Offering sub-flow is executed at this point."/>
    <AlternativeFlows ID="_rKVxADkIEeC6voFW1_Te6Q" Name="Cancel Course Offering" Content="The system cancels the course offering. For each student enrolled in the cancelled course offering, system will modify the student’s schedule. The first available alternate course selection will be substituted for the cancelled course offering. If no alternates are available, then no substitution will be made. Control returns to the Main flow to process the next course offering for the semester.&#xD;&#xA;Once all schedules have been processed for the current semester, the system will notify all students, by mail, of any changes to their schedule (e.g., cancellation or substitution)."/>
    <AlternativeFlows ID="_vvORcDkIEeC6voFW1_Te6Q" Name="No Professor for the Course Offering" Content="If in the basic flow there is no professor signed up to teach the course offering, the system will cancel the course offering. The Cancel Course Offering sub-flow is executed at this point."/>
    <AlternativeFlows ID="_yOS78DkIEeC6voFW1_Te6Q" Name="Billing System Unavailable" Content="If the system is unable to communicate with the Billing System, the system will attempt to re-send the request after a specified period. The system will continue to attempt to re-send until the Billing System becomes available."/>
    <Preconditions ID="_2D-NADkIEeC6voFW1_Te6Q" Name="Login" Content="The Registrar must be logged onto the system in order for this use case to begin."/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_-v6pcDkIEeC6voFW1_Te6Q" Name="Login" Content="This use case describes how a user logs into the Course Registration System.&#xD;&#xA;The actors starting this use case are Student, Professor, and Registrar.&#xD;&#xA;The use case begins when the actor types his/her name and password on the login form." Sections="_-v6pcTkIEeC6voFW1_Te6Q _JDoU8DkJEeC6voFW1_Te6Q" MainActor="_HKFrkDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_-v6pcTkIEeC6voFW1_Te6Q" Name="Basic Flow - Login" Content="1. The system validates the actor’s password and logs him/her into the system.&#xD;&#xA;2. The system displays the Main Form and the use case ends."/>
    <AlternativeFlows ID="_JDoU8DkJEeC6voFW1_Te6Q" Name="Invalid Name / Password" Content="If in the basic flow the system cannot find the name or the password is invalid, an error message is displayed. The actor can type in a new name or password or choose to cancel the operation, at which point the use case ends."/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_Sm4FcDkMEeC6voFW1_Te6Q" Name="Register for Courses" Content="This use case allows a Student to register for course offerings in the current semester. The Student can also modify or delete course selections if changes are made within the add/drop period at the beginning of the semester. The Course Catalog System provides a list of all the course offerings for the current semester.&#xD;&#xA;The main actor of this use case is the Student. The Course Catalog System is an actor within the use case.&#xD;&#xA;The use case begins when the Student selects the &quot;maintain schedule&quot; activity from the Main Form." Sections="_Sm4FcTkMEeC6voFW1_Te6Q _i0otgDkMEeC6voFW1_Te6Q _ohAacDkMEeC6voFW1_Te6Q _uP-vcDkMEeC6voFW1_Te6Q _wYn28DkMEeC6voFW1_Te6Q _x9QScDkMEeC6voFW1_Te6Q _zr9P8DkMEeC6voFW1_Te6Q _0wLGADkMEeC6voFW1_Te6Q _2fP28DkMEeC6voFW1_Te6Q _60f_8DkMEeC6voFW1_Te6Q" MainActor="_IDs0IDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_Sm4FcTkMEeC6voFW1_Te6Q" Name="Basic Flow - Create a Schedule" Content="1. The Student selects &quot;create schedule.&quot;&#xD;&#xA;2. The system displays a blank schedule form.&#xD;&#xA;3. The system retrieves a list of available course offerings from the Course Catalog System.&#xD;&#xA;4. The Student selects 4 primary course offerings and 2 alternate course offerings from the list of available offerings. Once the selections are complete the Student selects &quot;submit.&quot;&#xD;&#xA;5. The &quot;Add Course Offering&quot; sub-flow is performed at this step for each selected course offering.&#xD;&#xA;6. The system saves the schedule."/>
    <AlternativeFlows ID="_i0otgDkMEeC6voFW1_Te6Q" Name="Modify a Schedule" Content="1. The Student selects &quot;modify schedule&quot;.&#xD;&#xA;2. The system retrieves and displays the Student’s current schedule (e.g., the schedule for the current semester).&#xD;&#xA;3. The system retrieves a list of all the course offerings available for the current semester from the Course Catalog System. The system displays the list to the Student.&#xD;&#xA;4. The Student can then modify the course selections by deleting and adding new courses. The Student selects the courses to add from the list of available courses. The Student also selects any course offerings to delete from the existing schedule. Once the edits are complete the Student selects &quot;submit&quot;.&#xD;&#xA;5. The &quot;Add Course Offering&quot; sub-flow is performed at this step for each selected course offering.&#xD;&#xA;6. The system saves the schedule."/>
    <AlternativeFlows ID="_ohAacDkMEeC6voFW1_Te6Q" Name="Delete a Schedule" Content="1. The Student selects the &quot;delete schedule&quot; activity.&#xD;&#xA;2. The system retrieves and displays the Student current schedule.&#xD;&#xA;3. The Student selects &quot;delete&quot;.&#xD;&#xA;4. The system prompts the Student to verify the deletion.&#xD;&#xA;5. The Student verifies the deletion.&#xD;&#xA;6. The system deletes the schedule."/>
    <AlternativeFlows ID="_uP-vcDkMEeC6voFW1_Te6Q" Name="Save a Schedule" Content="At any point, the Student may choose to save a schedule without submitting it by selecting &quot;save&quot;. The current schedule is saved, but the student is not added to any of the selected course offerings. The course offerings are marked as &quot;selected&quot; in the schedule."/>
    <AlternativeFlows ID="_wYn28DkMEeC6voFW1_Te6Q" Name="Add Course Offering" Content="The system verifies that the Student has the necessary prerequisites and that the course offering is open. The system then adds the Student to the selected course offering. The course offering is marked as &quot;enrolled in&quot; in the schedule."/>
    <AlternativeFlows ID="_x9QScDkMEeC6voFW1_Te6Q" Name="Unfulfilled Prerequisites or Course Full" Content="If in the &quot;Add Course&quot; sub-flow the system determines that the Student has not satisfied the necessary prerequisites or that the selected course offering is full, an error message is displayed. The Student can either select a different course offering or cancel the operation, at which point the use case is restarted."/>
    <AlternativeFlows ID="_zr9P8DkMEeC6voFW1_Te6Q" Name="No Schedule Found" Content="If in the &quot;Modify a Schedule&quot; or &quot;Delete a Schedule&quot; sub-flows the system is unable to retrieve the Student’s schedule, an error message is displayed. The Student acknowledges the error and the use case is restarted."/>
    <AlternativeFlows ID="_0wLGADkMEeC6voFW1_Te6Q" Name="Course Catalog System Unavailable" Content="If, the system is unable to communicate with the Course Catalog System after a specified number of tries, the system will display an error message to the Student. The Student acknowledges the error message and the use case terminates."/>
    <AlternativeFlows ID="_2fP28DkMEeC6voFW1_Te6Q" Name="Course Registration Closed" Content="If, when the student selects &quot;maintain schedule&quot;, registration for the current semester has been closed, a message is displayed to the Student and the use case terminates. Students cannot register for courses after registration for the current semester has been closed."/>
    <Preconditions ID="_60f_8DkMEeC6voFW1_Te6Q" Name="Login" Content="Before this use case begins the Student has logged onto the system."/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_E8s_ADkNEeC6voFW1_Te6Q" Name="Select Courses to Teach" Content="This use case allows a professor to select the course offerings (date and time specific courses will be given) from the course catalog for the courses that he/she is eligible for and wishes to teach in the upcoming semester.&#xD;&#xA;The actor starting this use case is the Professor. The Course Catalog System is an actor within the use case.&#xD;&#xA;The use case begins when the professor selects the &quot;select courses to teach&quot; activity from the Main Form." Sections="_E8s_ATkNEeC6voFW1_Te6Q _uyr-cDkNEeC6voFW1_Te6Q _vvCR8DkNEeC6voFW1_Te6Q _yU5g8DkNEeC6voFW1_Te6Q _QtpBADkOEeC6voFW1_Te6Q" MainActor="_IuHDEDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_E8s_ATkNEeC6voFW1_Te6Q" Name="Basic Flow - Select Courses to Teach" Content="1. The system retrieves and displays the list of course offerings the professor is eligible to teach for the current semester. The system also retrieves and displays the list of courses the professor has previously selected to teach.&#xD;&#xA;2. The professor selects and/or de-selects the course offerings that he/she wishes to teach for the upcoming semester.&#xD;&#xA;3. The system removes the professor from teaching the de-selected course offerings.&#xD;&#xA;4. The system verifies that the selected offerings do not conflict (i.e., have the same dates and times) with each other or any offerings the professor has previously signed up to teach. If there is no conflict, the system updates the course offering information for each offering the professor selects."/>
    <AlternativeFlows ID="_uyr-cDkNEeC6voFW1_Te6Q" Name="No Courses Available" Content="If in the basic flow the professor is not eligible to teach any courses in the upcoming semester the system will display an error message. The professor acknowledges the message and the use case ends."/>
    <AlternativeFlows ID="_vvCR8DkNEeC6voFW1_Te6Q" Name="Schedule Conflict" Content="If the systems find a schedule conflict when trying to establish the course offerings the Professor should take, the system will display an error message indicating that a schedule conflict has occurred. The system will also indicate which are the conflicting courses. The professor can either resolve the schedule conflict (i.e., by canceling his selection to teach one of the course offerings) or cancel the operation, in which case any selections will be lost and the use case ends."/>
    <AlternativeFlows ID="_yU5g8DkNEeC6voFW1_Te6Q" Name="Course Registration Closed" Content="If, when the Professor selects &quot;select courses to teach&quot;, registration for the current semester has been closed, a message is displayed to the Professor and the use case terminates. Professors cannot change the course offerings they teach after registration for the current semester has been closed. If a professor change is needed after registration has been closed, it is handled outside the scope of this system."/>
    <Preconditions ID="_QtpBADkOEeC6voFW1_Te6Q" Name="Login" Content="Before this use case begins the Professor has logged onto the system."/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_zOHLcDkOEeC6voFW1_Te6Q" Name="Submit Grades" Content="This use case allows a Professor to submit student grades for one or more classes completed in the previous semester.&#xD;&#xA;The actor in this use case is the Professor.&#xD;&#xA;The use case begins when the Professor selects the &quot;submit grades&quot; activity from the Main Form." Sections="_zOHLcTkOEeC6voFW1_Te6Q _EmGyADkPEeC6voFW1_Te6Q _Fvy98DkPEeC6voFW1_Te6Q _H1688DkPEeC6voFW1_Te6Q" MainActor="_IuHDEDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_zOHLcTkOEeC6voFW1_Te6Q" Name="Basic Flow - Submit Grades" Content="1. The system displays a list of course offerings the Professor taught in the previous semester.&#xD;&#xA;2. The Professor selects a course offering.&#xD;&#xA;3. The system retrieves a list of all students who were registered for the course offering. The system also retrieves the grade information for each student in the offering.&#xD;&#xA;4. The system displays each student and any grade that was previously assigned for the offering.&#xD;&#xA;5. For each student on the list, the Professor enters a grade: A, B, C, D, F, or I. The system records the student’s grade for the course offering. If the Professor wishes to skip a particular student, the grade information can be left blank and filled in at a later time. The Professor may also change the grade for a student by entering a new grade."/>
    <AlternativeFlows ID="_EmGyADkPEeC6voFW1_Te6Q" Name="No Courses Taught" Content="If in the basic flow, the Professor did not teach any course offerings in the previous semester the system displays an error message and the use case ends."/>
    <AlternativeFlows ID="_Fvy98DkPEeC6voFW1_Te6Q" Name="Course Cancelled" Content="If too many students withdrew from the course during the add/drop period and the course was cancelled after the beginning of the semester, the system displays an error message. If the Professor chooses to cancel the operation the use case terminates, otherwise is restarted at step 2 of the basic flow."/>
    <Preconditions ID="_H1688DkPEeC6voFW1_Te6Q" Name="Login" Content="Before this use case begins the Professor has logged onto the system."/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_OQOt8DkPEeC6voFW1_Te6Q" Name="View Report Card" Content="This use case allows a Student to view his/her report card for the previously completed semester.&#xD;&#xA;The Student is the actor of this use case.&#xD;&#xA;The use case begins when the Student selects the &quot;view report card&quot; activity from the Main Form." Sections="_OQOt8TkPEeC6voFW1_Te6Q _jRm2ADkPEeC6voFW1_Te6Q _mkGhgDkPEeC6voFW1_Te6Q" MainActor="_IDs0IDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_OQOt8TkPEeC6voFW1_Te6Q" Name="Basic Flow - View Report Card" Content="1. The system retrieves the grade information for each of the courses the Student completed during the previous semester.&#xD;&#xA;2. The system prepares, formats, and displays the grade information.&#xD;&#xA;3. When Student is finished viewing the grade information the Student selects &quot;close&quot;."/>
    <AlternativeFlows ID="_jRm2ADkPEeC6voFW1_Te6Q" Name="No Grade Information Available" Content="If in the basic flow the system cannot find any grade information from the previous semester for the Student, a message is displayed. Once the Student acknowledges the message the use case terminates."/>
    <Preconditions ID="_mkGhgDkPEeC6voFW1_Te6Q" Name="Login" Content="Before this use case begins the Student has logged onto the system."/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_GQGngL5lEeOeZ6PwCOYBTQ" Name="Add Entity" Content="This use case allows the Registrar to add a new entity in the registration system.&#xD;&#xA;The main actor of this use case is the Registrar.&#xD;&#xA;This use case is abstract and more concrete use cases complete the functionality. " Sections="_GQGngb5lEeOeZ6PwCOYBTQ _I6dBAL59EeOeZ6PwCOYBTQ" MainActor="_J8T7kDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_GQGngb5lEeOeZ6PwCOYBTQ" Name="Basic Flow" Content="1. The system displays a blank form.&#xD;&#xA;2. The Registrar enters specific information of the entity.&#xD;&#xA;3. The system validates the data to insure the proper data format.&#xA;4. The system searches for an existing entity with the specified name. &#xA;5. If the data is valid the system creates a new entity and assigns a unique system-generated id number. This number is displayed, so it can be used for subsequent uses of the system.&#xD;&#xA;6 . Steps 1-5 are repeated for each entity added to the system. &#xA;7. When the Registrar finishes adding entities to the system, the use case ends."/>
    <AlternativeFlows ID="_I6dBAL59EeOeZ6PwCOYBTQ" Name="Alternative Flow"/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_JXWFQL5lEeOeZ6PwCOYBTQ" Name="Modify Entity Information" Content="This use case allows the Registrar to modify information of an existing entity in the registration system.&#xD;&#xA;The main actor of this use case is the Registrar.&#xD;&#xA;This use case is abstract and more concrete use cases complete the functionality. " Sections="_JXWFQb5lEeOeZ6PwCOYBTQ" MainActor="_J8T7kDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_JXWFQb5lEeOeZ6PwCOYBTQ" Name="Basic Flow" Content="1. The system displays a blank form.&#xD;&#xA;2. The Registrar types in the entity id number he or she wishes to modify&#xD;&#xA;3. The system retrieves the entity information and displays it on the screen&#xD;&#xA;4. The Registrar modifies one or more of the entity information fields.&#xD;&#xA;5. When changes are complete, the Registrar selects the save button.&#xD;&#xA;6. The system updates the entity information.&#xD;&#xA;7. Steps 1 to 6 are repeated for each entity the Registrar wants to modify.&#xA;8. When edits are complete, the use case ends."/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_Ko8QAL5lEeOeZ6PwCOYBTQ" Name="Delete Entity" Content="This use case allows the Registrar to remove an existing entity in the registration system.&#xD;&#xA;The main actor of this use case is the Registrar.&#xD;&#xA;This use case is abstract and more concrete use cases complete the functionality. " Sections="_Ko8QAb5lEeOeZ6PwCOYBTQ" MainActor="_J8T7kDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_Ko8QAb5lEeOeZ6PwCOYBTQ" Name="Basic Flow" Content="1. The system displays a blank form.&#xD;&#xA;2. The Registrar types in the id number for the entity that is being deleted.&#xD;&#xA;3. The system retrieves the entity and displays its information in the form.&#xD;&#xA;4. The Registrar selects the delete button.&#xD;&#xA;5. The system displays a verification dialog confirming the operation.&#xD;&#xA;6. The Registrar confirms the deletion.&#xD;&#xA;7. The system deletes the entity.&#xD;&#xA;8. Steps 1-7 are repeated for each entity the Registrar wants to remove. &#xA;9. When the Registrar is ends deleting entities from the system, the use case ends."/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_qmejoL5lEeOeZ6PwCOYBTQ" Name="Manage Entity Not Found" Content="This use case describes the behavior of the system when an entity is not found.&#xA;The main actor is the Registrar.&#xA;The use case extends other use cases that manage entities." Sections="_qmejob5lEeOeZ6PwCOYBTQ" MainActor="_J8T7kDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_qmejob5lEeOeZ6PwCOYBTQ" Name="Basic Flow" Content="1. The use case begins when the Registrar is modifying or removing an entity and the specified id number does not exist.&#xA;2. The system displays an error message indicanting the entity not found.&#xA;3. At this point, the Registrar can type in a different id number or cancel the operation at which point the use case ends."/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_R_hLQL6BEeOeZ6PwCOYBTQ" Name="Add Professor" Content="This use case allows the Registrar to add new professors in the registration system.&#xD;&#xA;The main actor of this use case is the Registrar.&#xD;&#xA;This use case is an special case of the Add Entity use case." Sections="_R_hLQb6BEeOeZ6PwCOYBTQ" MainActor="_J8T7kDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_R_hLQb6BEeOeZ6PwCOYBTQ" Name="Basic Flow" Content="1. The use case begins when the Registrar chooses to add a new professor from the main menu.&#xA;2. The Registrar inputs the information add a new professor (&lt;&lt;inherits>> Add Entity).&#xA;2.1. The Registrar enters the following information for the professor: name, date of birth, social security number, status, and department.&#xA;3. The use case ends."/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_Tj02oL6BEeOeZ6PwCOYBTQ" Name="Add Student" Content="This use case allows the Registrar to add new students in the registration system.&#xD;&#xA;The main actor of this use case is the Registrar.&#xD;&#xA;This use case is an special case of the Add Entity use case." Sections="_Tj02ob6BEeOeZ6PwCOYBTQ" MainActor="_J8T7kDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_Tj02ob6BEeOeZ6PwCOYBTQ" Name="Basic Flow" Content="1. The use case begins when the Registrar chooses to add a new student from the main menu.&#xA;2. The Registrar inputs the information add a new student (&lt;&lt;inherits>> Add Entity).&#xA;2.1. The Registrar enters the following information for the student: name, date of birth, social security number, status, and graduation date.&#xA;3. The use case ends."/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_VZMc0L6BEeOeZ6PwCOYBTQ" Name="Modify Professor Information" Content="This use case allows the Registrar to alter information of the professors already registered in the system.&#xD;&#xA;The primary actor of this use case is the Registrar.&#xD;&#xA;This use case is an special case of the Modify Entity Information use case." Sections="_VZMc0b6BEeOeZ6PwCOYBTQ" MainActor="_J8T7kDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_VZMc0b6BEeOeZ6PwCOYBTQ" Name="Basic Flow" Content="1. The use case begins when the Registrar chooses to modify an existing professor from the main menu.&#xA;2. The Registrar selects the professor and make the changes (&lt;&lt;inherits>> Modify Entity Information).&#xA;2.1. The Registrar modifies one or more of the professor information fields: name, date of birth, social security number , status, and department.&#xA;3. The use case ends."/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_XFxTYL6BEeOeZ6PwCOYBTQ" Name="Modify Student Information" Content="This use case allows the Registrar to alter information of the students already registered in the system.&#xD;&#xA;The primary actor of this use case is the Registrar.&#xD;&#xA;This use case is an special case of the Modify Entity Information use case." Sections="_XFxTYb6BEeOeZ6PwCOYBTQ" MainActor="_J8T7kDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_XFxTYb6BEeOeZ6PwCOYBTQ" Name="Basic Flow" Content="1. The use case begins when the Registrar chooses to modify an existing student from the main menu.&#xA;2. The Registrar selects the student and make the changes (&lt;&lt;inherits>> Modify Entity Information).&#xA;2.1. The Registrar modifies one or more of the student information fields: name, date of birth, social security number, student id number, status, and graduation date.&#xA;3. The use case ends."/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_Yux4kL6BEeOeZ6PwCOYBTQ" Name="Delete Professor" Content="This use case allows the Registrar to delete professors of the registration system.&#xD;&#xA;The mian actor of this use case is the Registrar.&#xD;&#xA;This use case is an special case of the Delete Entity use case." Sections="_Yux4kb6BEeOeZ6PwCOYBTQ" MainActor="_J8T7kDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_Yux4kb6BEeOeZ6PwCOYBTQ" Name="Basic Flow" Content="1. The use case begins when the Registrar chooses to delete an existing professor from the main menu.&#xA;2. The Registrar selects the professor and removes it (&lt;&lt;inherits>> Delete Entity).&#xA;3. The use case ends."/>
  </UseCaseSpecifications>
  <UseCaseSpecifications ID="_bCj5EL6BEeOeZ6PwCOYBTQ" Name="Delete Student" Content="This use case allows the Registrar to delete students of the registration system.&#xD;&#xA;The mian actor of this use case is the Registrar.&#xD;&#xA;This use case is an special case of the Delete Entity use case." Sections="_bCj5Eb6BEeOeZ6PwCOYBTQ" MainActor="_J8T7kDhoEeCEUPrX8_ckEg">
    <BasicFlow ID="_bCj5Eb6BEeOeZ6PwCOYBTQ" Name="Basic Flow" Content="1. The use case begins when the Registrar chooses to delete an existing student from the main menu.&#xA;2. The Registrar selects the student and removes it (&lt;&lt;inherits>> Delete Entity).&#xA;3. The use case ends."/>
  </UseCaseSpecifications>
  <SupplementarySpecifications ID="_BGhcEDhnEeCEUPrX8_ckEg" Name="Functionality" Content="This section lists functional requirements that are common to more than one use case." Sections="_DOZukDhnEeCEUPrX8_ckEg _MuFVEDhnEeCEUPrX8_ckEg">
    <SupplementaryRequirement ID="_DOZukDhnEeCEUPrX8_ckEg" Name="System Error Logging" Content="All system errors shall be logged. Fatal system errors shall result in an orderly shutdown of the system.&#xD;&#xA;The system error messages shall include a text description of the error, the operating system error code (if applicable), the module detecting the error condition, a data stamp, and a time stamp. All system errors shall be retained in the Error Log Database."/>
    <SupplementaryRequirement ID="_MuFVEDhnEeCEUPrX8_ckEg" Name="Remote Access" Content="All functionality shall be available remotely through an internet connection. This may require applications or controllers running on the remote computers."/>
  </SupplementarySpecifications>
  <SupplementarySpecifications ID="_OaU0cDhnEeCEUPrX8_ckEg" Name="Usability" Content="This section lists all of those requirements that relate to, or affect, the usability of the system." Sections="_RwRckDhnEeCEUPrX8_ckEg _TqDBoDhnEeCEUPrX8_ckEg _XZOCEDhnEeCEUPrX8_ckEg">
    <SupplementaryRequirement ID="_RwRckDhnEeCEUPrX8_ckEg" Name="Windows Compliance" Content="The desktop user-interface shall be Windows 95/98 compliant."/>
    <SupplementaryRequirement ID="_TqDBoDhnEeCEUPrX8_ckEg" Name="Design for Ease-of-Use" Content="The user interface of the C-Registration System shall be designed for ease-of-use and shall be appropriate for a computer-literate user community with no additional training on the System."/>
    <SupplementaryRequirement ID="_XZOCEDhnEeCEUPrX8_ckEg" Name="Online Help" Content="Each feature of the C-Registration System shall have built-in online help for the user. Online Help shall include step by step instructions on using the System. Online Help shall include definitions for terms and acronyms."/>
  </SupplementarySpecifications>
  <SupplementarySpecifications ID="_ZgB9kDhnEeCEUPrX8_ckEg" Name="Reliability" Content="This section lists all reliability requirements." Sections="_gUR4kDhnEeCEUPrX8_ckEg _iqgJEDhnEeCEUPrX8_ckEg">
    <SupplementaryRequirement ID="_gUR4kDhnEeCEUPrX8_ckEg" Name="Availability" Content="The C-Registration System shall be available 24 hours a day, 7 days a week. There shall be no more than 4% down time."/>
    <SupplementaryRequirement ID="_iqgJEDhnEeCEUPrX8_ckEg" Name="Mean Time Between Failures" Content="Mean Time Between Failures shall exceed 300 hours."/>
  </SupplementarySpecifications>
  <SupplementarySpecifications ID="_lzAyIDhnEeCEUPrX8_ckEg" Name="Performance" Content="The performance characteristics of the system are outlined in this section." Sections="_obPYoDhnEeCEUPrX8_ckEg _pf-MEDhnEeCEUPrX8_ckEg _ry6fEDhnEeCEUPrX8_ckEg">
    <SupplementaryRequirement ID="_obPYoDhnEeCEUPrX8_ckEg" Name="Simultaneous Users" Content="The system shall support up to 2000 simultaneous users against the central database at any given time, and up to 500 simultaneous users against the local servers at any one time."/>
    <SupplementaryRequirement ID="_pf-MEDhnEeCEUPrX8_ckEg" Name="Database Access Response Time" Content="The system shall provide access to the legacy course catalog database with no more than a 10 second latency."/>
    <SupplementaryRequirement ID="_ry6fEDhnEeCEUPrX8_ckEg" Name="Transaction Response Time" Content="The system must be able to complete 80% of all transactions within 2 minutes."/>
  </SupplementarySpecifications>
  <SupplementarySpecifications ID="_txuVIDhnEeCEUPrX8_ckEg" Name="Supportability" Content="This section defines any requirements that will enhance the supportability or maintainability of the system being built." Sections="_wSUpoDhnEeCEUPrX8_ckEg">
    <SupplementaryRequirement ID="_wSUpoDhnEeCEUPrX8_ckEg" Name="New Releases Downloadable" Content="Upgrades to the PC client portion of C-Registration shall be downloadable from the UNIX Server over the internet. This feature enables students to have easy access to system upgrades."/>
  </SupplementarySpecifications>
  <SupplementarySpecifications ID="_yoFAEDhnEeCEUPrX8_ckEg" Name="Design Constraints" Content="This section lists any design constraints on the system being built." Sections="_1LbGkDhnEeCEUPrX8_ckEg _2USMEDhnEeCEUPrX8_ckEg _47EBEDhnEeCEUPrX8_ckEg _8UurkDhnEeCEUPrX8_ckEg _ADYuoDhoEeCEUPrX8_ckEg">
    <SupplementaryRequirement ID="_1LbGkDhnEeCEUPrX8_ckEg" Name="Course Catalog Legacy System" Content="The system shall integrate with existing legacy system (course catalog database) which operates on the College DEC VAX Main Frame."/>
    <SupplementaryRequirement ID="_2USMEDhnEeCEUPrX8_ckEg" Name="Billing System" Content="The C-Registration System shall interface with the existing Course Billing System which operates on the College DEC VAX Main Frame."/>
    <SupplementaryRequirement ID="_47EBEDhnEeCEUPrX8_ckEg" Name="Platform Requirements" Content="The client portion of the C-Registration System shall operate on any personal computer with a 486 processor or greater. The client portion shall require less than 20 MB disk space and 32 MB RAM.&#xD;&#xA;The server portion of the C-Registration System shall operate on the Wylie College UNIX server."/>
    <SupplementaryRequirement ID="_8UurkDhnEeCEUPrX8_ckEg" Name="Internet Browsers" Content="The web-based interface for the C-Registration System shall run in Netscape 4.0.4 and Internet Explorer 4.0 browsers."/>
    <SupplementaryRequirement ID="_ADYuoDhoEeCEUPrX8_ckEg" Name="Java Compatibility" Content="The web-based interface shall be compatible with the Java 1.1 VM runtime environment."/>
  </SupplementarySpecifications>
  <ProblemStatement ID="_0U_14ThcEeCEUPrX8_ckEg" Name="Problem Statement" Content="As the head of information systems for Wylie College you are tasked with developing a new student registration system. The college would like a new client-server system to replace its much older system developed around mainframe technology. The new system will allow students to register for courses and view report cards from personal computers attached to the campus LAN. Professors will be able to access the system to sign up to teach courses as well as record grades.&#xD;&#xA;&#xD;&#xA;Due to a decrease in federal funding the college cannot afford to replace the entire system at once. The college will keep the existing course catalog database where all course information is maintained. This database is an Ingres relational database running on a DEC VAX. Fortunately the college has invested in an open SQL interface that allows access to this database from college’s Unix servers. The legacy system performance is rather poor, so the new system must insure that access to the data on the legacy system occurs in a timely manner.  The new system will access course information from the legacy database but will not update it. The registrar’s office will continue to maintain course information through another system.&#xD;&#xA;&#xD;&#xA;At the beginning of each semester students may request a course catalogue containing a list of course offerings for the semester.  Information about each course, such as professor, department, and prerequisites will be included to help students make informed decisions.&#xD;&#xA;&#xD;&#xA;The new system will allow students to select four course offerings for the coming semester.  In addition, each student will indicate two alternative choices in case the student cannot be assigned to a primary selection.  Course offerings will have a maximum of ten students and a minimum of three students.  A course offering with fewer than three students will be canceled. For each semester, there is a period of time that students can change their schedule.  Students must be able to access the system during this time to add or drop courses. Once the registration process is completed for a student, the registration system sends information to the billing system so the student can be billed for the semester. If a course fills up during the actual registration process, the student must be notified of the change before submitting the schedule for processing.&#xD;&#xA;&#xD;&#xA;At the end of the semester, the student will be able to access the system to view an electronic report card. Since student grades are sensitive information, the system must employ extra security measures to prevent unauthorized access.&#xD;&#xA;&#xD;&#xA;Professors must be able to access the on-line system to indicate which courses they will be teaching.  They will also need to see which students signed up for their course offerings. In addition, the professors will be able to record the grades for the students in each class."/>
  <Glossary ID="_0U_14jhcEeCEUPrX8_ckEg" Name="Glossary" Content="This document contains all glossary entries of the project." Sections="_jAWaEDhjEeCEUPrX8_ckEg _kekrkDhjEeCEUPrX8_ckEg _wCs2EDhjEeCEUPrX8_ckEg _z1KbEDhjEeCEUPrX8_ckEg _2HH2oDhjEeCEUPrX8_ckEg _4mpNEDhjEeCEUPrX8_ckEg _7JiAkDhjEeCEUPrX8_ckEg _-D7VIDhjEeCEUPrX8_ckEg _AdMSkDhkEeCEUPrX8_ckEg _DIZ7oDhkEeCEUPrX8_ckEg _Fr5zIDhkEeCEUPrX8_ckEg _IVWhoDhkEeCEUPrX8_ckEg _Kd_CEDhkEeCEUPrX8_ckEg _N3k0EDhkEeCEUPrX8_ckEg _RjByIDhkEeCEUPrX8_ckEg _STxSkDhkEeCEUPrX8_ckEg _UiaUYDhkEeCEUPrX8_ckEg">
    <Definitions ID="_jAWaEDhjEeCEUPrX8_ckEg" Name="Course" Content="A class offered by the university."/>
    <Definitions ID="_kekrkDhjEeCEUPrX8_ckEg" Name="Course Catalog" Content="The unabridged catalog of all courses offered by the university."/>
    <Definitions ID="_wCs2EDhjEeCEUPrX8_ckEg" Name="Faculty" Content="All the professors teaching at the university."/>
    <Definitions ID="_z1KbEDhjEeCEUPrX8_ckEg" Name="Finance System" Content="The system used for processing billing information."/>
    <Definitions ID="_2HH2oDhjEeCEUPrX8_ckEg" Name="Grade" Content="The grade for the student in a course."/>
    <Definitions ID="_4mpNEDhjEeCEUPrX8_ckEg" Name="Professor" Content="A person teaching classes at the university."/>
    <Definitions ID="_7JiAkDhjEeCEUPrX8_ckEg" Name="Registrar" Content="University administrator responsible for enrollment &amp; offered courses."/>
    <Definitions ID="_-D7VIDhjEeCEUPrX8_ckEg" Name="Remote Access" Content="Any system access achieved by dialing-in remotely or connecting via the internet."/>
    <Definitions ID="_AdMSkDhkEeCEUPrX8_ckEg" Name="Report" Content="All the grades for all courses taken by a student in a given semester."/>
    <Definitions ID="_DIZ7oDhkEeCEUPrX8_ckEg" Name="Roster" Content="All the students enrolled in a particular course offering."/>
    <Definitions ID="_Fr5zIDhkEeCEUPrX8_ckEg" Name="Section" Content="A specific offering for a course, including days of the week and times."/>
    <Definitions ID="_IVWhoDhkEeCEUPrX8_ckEg" Name="Semester" Content="Each school year is split into 3 semesters; Fall, Spring, and Summer."/>
    <Definitions ID="_Kd_CEDhkEeCEUPrX8_ckEg" Name="Schedule" Content="The courses a student has enrolled in for the current semester."/>
    <Definitions ID="_N3k0EDhkEeCEUPrX8_ckEg" Name="Student" Content="A person enrolled in classes at the university."/>
    <Definitions ID="_RjByIDhkEeCEUPrX8_ckEg" Name="Student Body" Content="The list of all students."/>
    <Definitions ID="_STxSkDhkEeCEUPrX8_ckEg" Name="Transcript" Content="The history of the grades for all courses for a particular student."/>
    <Definitions ID="_UiaUYDhkEeCEUPrX8_ckEg" Name="University Artifacts" Content="General term used to collect business entities associated with the University."/>
  </Glossary>
  <Vision ID="_0U_14zhcEeCEUPrX8_ckEg" Name="Vision" Sections="_0U_15DhcEeCEUPrX8_ckEg _0U_15ThcEeCEUPrX8_ckEg _0U_15jhcEeCEUPrX8_ckEg _0U_15zhcEeCEUPrX8_ckEg">
    <BusinessRequirements ID="_0U_15DhcEeCEUPrX8_ckEg" Name="Business Requirements"/>
    <ProductOverview ID="_0U_15ThcEeCEUPrX8_ckEg" Name="Product Overview"/>
    <MajorFeatures ID="_0U_15jhcEeCEUPrX8_ckEg" Name="Major Features"/>
    <Scope ID="_0U_15zhcEeCEUPrX8_ckEg" Name="Scope"/>
  </Vision>
</edu.isistan.dal.ucs:UCSProject>
